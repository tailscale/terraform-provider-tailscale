name: ci
on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Get cache paths
        id: cache
        run: |
          echo "build=$(go env GOCACHE)" | tee -a $GITHUB_OUTPUT
          echo "module=$(go env GOMODCACHE)" | tee -a $GITHUB_OUTPUT

      - name: Set up cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run tests
        run: go test -race ./...

  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Get cache paths
        id: cache
        run: |
          echo "build=$(go env GOCACHE)" | tee -a $GITHUB_OUTPUT
          echo "module=$(go env GOMODCACHE)" | tee -a $GITHUB_OUTPUT

      - name: Set up cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Generate documentation
        run: go generate ./...

      - name: Check for uncommitted changes
        run: |
          git add .
          git diff --staged --exit-code

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Get cache paths
        id: cache
        run: |
          echo "build=$(go env GOCACHE)" | tee -a $GITHUB_OUTPUT
          echo "module=$(go env GOMODCACHE)" | tee -a $GITHUB_OUTPUT

      - name: Set up cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports

      - name: Format code
        run: |
          go fmt ./...
          goimports -w -local github.com/tailscale .

      - name: Check for uncommitted changes
        run: |
          git add .
          git diff --staged --exit-code

  licenses:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: check licenses
        run: ./scripts/check_license_headers.sh .
